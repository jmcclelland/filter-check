# Configuration file for filter-check
# 
# Name this .filter-check.conf and place in your
# home directory.
#
# The [main] section contains global settings. Each setting can be
# overwritten via a command line option with the same name but with
# -- preceding it, e.g. set `sleep = 10` below or pass --sleep 10
# on the command line.
#
# After the main section is a section for each host that you either
# want to relay mail through (--sendvia) or send mail to (--sendto).
# Optionally, you can specify localhost, a domain or an ipv4 address
# as the --sendvia parameter without specifying it in your config
# file and the program will attempt to relay via that host without
# a username or password.

[main]

# Print full headers instead of just selected matching headers.
; headers = False

# Don't output anything, exit code 0 means found in inbox, exit code 1
# means found in spambox, exit code 3 means not found and exit code 255
# means there was an error.
; quiet = False

# Print the gtube code in body of messages to force spamassassin to tag
# as spam (debugging only).
# See https://spamassassin.apache.org/gtube/
; gtube = False

# How long to sleep between sending email and checking for it.
; sleep = 10

# Optionally, you can choose to only send a message and not try to fetch it. In
# this mode, filter-check will output the message id that was sent.  This way
# you can send a batch of messages, collect the message ids, wait a while, then
# try to fetch all of them (useful for batch runs). In quiet is specified,
# using sendonly will emit via standard out just the message-id itself (not the
# message-id label) so it can easily be captured when running as a batch. When
# running without quiet, it will return the label and the message id.
; sendonly = False

# Optionally, you can choose to only fetch a message. This option can be run
# after you have run filter-check with the sendonly option. You must also pass
# the messageid option set to the message-id that is output by the sendonly
# invocation. Do not pass the message-id label - just the message id itself.
# Like sendto, fetchfrom should be set to a host that is configured with imap
# login credentials.
; fetchfrom = None

# When using fetchfrom, you must also include messageid - set to the value of
# the message-id returned by the invocation using sendonly (don't include the
# message-id label - just the message-id itself.
; messageid = None

# What email address to send the email from.
emailfrom = ''

# Through what smtpd server should email be relayed through? Must match
# a block below.
sendvia = mayfirst

# Which host should the email be sent to? Must match a block below.
sendto = outlook

[localhost]

smtp_host = localhost

[bulk]

smtp_host = bulk.mayfirst.org

[mayfirst]

emailto =
imap_user =
imap_pass =
imap_host = mail.mayfirst.org
imap_spam_box = INBOX.Spam
headers_regex = (X-Spam-Status)

smtp_user =
smtp_pass =
smtp_host = mail.mayfirst.org

[riseup]

emailto = 
imap_user = 
imap_pass = 
imap_host = mail.riseup.net
imap_spam_box = INBOX.Spam
headers_regex = (X-Spam-Status)

smtp_user = 
smtp_pass = 
smtp_host = mail.riseup.net

[gmail]

emailto = 
imap_user = 
imap_pass = 
imap_host = imap.gmail.com
imap_spam_box = [Gmail]/Spam
headers_regex = (ARC-Authentication-Results|Received-SPF|Authentication-Results)

smtp_user = 
smtp_pass = 
smtp_host = smtp.gmail.com

[outlook]

emailto = 
imap_user = 
imap_pass = 
imap_host = imap-mail.outlook.com
imap_spam_box = Junk
headers_regex = (Authentication-Results|Received-SPF|CMM-sender-ip|X-Microsoft-Antispam|X-Exchange-Antispam-Report-Test|X-Exchange-Antispam-Report-CFA-Test|X-Forefront-Antispam-Report|X-MS-Exchange-Organization-SCL|SpamDiagnosticOutput|SpamDiagnosticMetadata|X-Microsoft-Antispam-Mailbox-Delivery)

[yahoo]

emailto =
imap_user =
imap_pass =
imap_host = imap.mail.yahoo.com
imap_spam_box = "Bulk Mail"
headers_regex = (X-Originating-IP|Received-SPF|Authentication-Results)
